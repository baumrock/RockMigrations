{
  // load rockmigrations module into $rm variable
  "rm": {
    "prefix": "rm",
    "body": [
      "/** @var RockMigrations \\$rm */",
      "\\$rm = \\$this->wire->modules->get('RockMigrations');",
      "\\$rm->"
    ],
    "description": "Get RockMigrations Module"
  },
  "rm-migrate": {
    "prefix": "rm-migrate",
    "body": [
      "\\$rm->migrate([",
      "  'fields' => [],",
      "  'templates' => [],",
      "]);"
    ]
  },

  // helpers
  "rm-defaults": {
    "prefix": "rm-defaults",
    "body": [
      "\\$rm->setPagenameReplacements('de');",
      "\\$rm->setModuleConfig('AdminThemeUikit', [",
      "  // use consistent inputfield clicks",
      "  // see https://github.com/processwire/processwire/pull/169",
      "  'toggleBehavior' => 1,",
      "]);",
      "\\$rm->setModuleConfig('ProcessPageList', [",
      "  'useTrash' => true, // show trash in tree for non superusers",
      "]);",
      "// install german language pack for the default language",
      "// this will install language support, download the ZIP and install it",
      "\\$rm->setLanguageTranslations('DE');",
      "\\$rm->installModule('LanguageSupportFields');",
      "\\$rm->installModule('LanguageSupportPageNames');",
      "\\$rm->installModule('LanguageTabs');",
      "\\$rm->setFieldData('title', ['type' => 'textLanguage']);"
    ],
    "description": "Set some custom PW defaults"
  },

  // field migrations
  "rmf-text": {
    "prefix": "rmf-text",
    "body": [
      "$1 => [",
      "  'type' => 'text',",
      "  'label' => '$3',",
      "  'icon' => 'align-left',",
      "  'textformatters' => [",
      "    'TextformatterEntities',",
      "  ],",
      "],"
    ],
    "description": "Add a text field via RockMigrations"
  },
  "rmf-url": {
    "prefix": "rmf-url",
    "body": [
      "$1 => [",
      "  'type' => 'URL',",
      "  'label' => '$3',",
      "  'icon' => 'link',",
      "  'textformatters' => [",
      "    'TextformatterEntities',",
      "  ],",
      "],"
    ]
  },
  "rmf-checkbox": {
    "prefix": "rmf-checkbox",
    "body": ["$1 => [", "  'type' => 'checkbox',", "  'label' => '$2',", "],"]
  },
  "rmf-toggle": {
    "prefix": "rmf-toggle",
    "body": [
      "$1 => [",
      "  'type' => 'toggle',",
      "  'label' => '$2',",
      "  'formatType' => 0, // integer 0/1",
      "  'labelType' => 0, // yes/no",
      "  'inputfieldClass' => 0, // yes/no",
      "  'defaultOption' => 'yes',",
      "],"
    ]
  },
  "rmf-page": {
    "prefix": "rmf-page",
    "body": [
      "$1 => [",
      "  'type' => 'page',",
      "  'label' => '$2',",
      "  'derefAsPage' => ${4:FieldtypePage::derefAsPageOrFalse},",
      "  'inputfield' => ${5:'InputfieldPageListSelect'},",
      "  'findPagesSelector' => '${6:id>0,template!=admin}',",
      "  'labelFieldName' => ${7:'title'},",
      "],"
    ],
    "description": "Add a page field via RockMigrations"
  },
  "rmf-image": {
    "prefix": "rmf-image",
    "body": [
      "$1 => [",
      "  'type' => 'image',",
      "  'label' => '$2',",
      "  'maxFiles' => $4,",
      "  'descriptionRows' => $5,",
      "  'extensions' => '${6:jpg jpeg gif png svg}',",
      "  'maxSize' => ${7:3}, // max 3 megapixels",
      "  'okExtensions' => ['svg'],",
      "  'icon' => 'picture-o',",
      "  'outputFormat' => FieldtypeFile::outputFormatSingle,",
      "  'gridMode' => 'grid', // left, list",
      "],"
    ],
    "description": "Add an image field via RockMigrations"
  },
  "rmf-imagepicker": {
    "prefix": "rmf-imagepicker",
    "body": [
      "$1 => [",
      "  'type' => 'RockImagePicker',",
      "  'label' => '$2',",
      "  'sourcepage' => ${3:1},",
      "  'sourcefield' => '${4:yourfieldname}',",
      "],"
    ]
  },
  "rmf-datetime": {
    "prefix": "rmf-datetime",
    "body": [
      "$1 => [",
      "  'type' => 'datetime',",
      "  'label' => '$2',",
      "  'dateOutputFormat' => 'd.m.Y H:i',",
      "  'inputType' => 'text',",
      "  'dateSelectFormat' => 'yMd',",
      "  'datepicker' => InputfieldDatetime::datepickerFocus,",
      "  'dateInputFormat' => 'j.n.y',",
      "  'timeInputFormat' => 'H:i',",
      "  'defaultToday' => 1,",
      "],"
    ],
    "description": "Add an image field via RockMigrations"
  },
  "rmf-files": {
    "prefix": "rmf-files",
    "body": [
      "$1 => [",
      "  'type' => 'file',",
      "  'label' => '$2',",
      "  'maxFiles' => $4,",
      "  'descriptionRows' => $5,",
      "  'extensions' => '${6:mp4 pdf xlsx}',",
      "  'icon' => 'files-o',",
      "  'outputFormat' => FieldtypeFile::outputFormatArray,",
      "],"
    ],
    "description": "Add a files field via RockMigrations"
  },
  "rmf-textarea": {
    "prefix": "rmf-textarea",
    "body": [
      "$1 => [",
      "  'type' => 'textarea',",
      "  'label' => '$3',",
      "  'rows' => ${4:5},",
      "  'icon' => '${5:align-left}',",
      "],"
    ],
    "description": "Add a textarea field via RockMigrations"
  },
  "rmf-textarea-tinymce": {
    "prefix": "rmf-textarea-tinymce",
    "body": [
      "$1 => [",
      "  'type' => 'textarea',",
      "  'inputfieldClass' => 'InputfieldTinyMCE',",
      "  'contentType' => FieldtypeTextarea::contentTypeHTML,",
      "  'label' => '$3',",
      "  'rows' => ${4:5},",
      "  'icon' => '${5:align-left}',",
      "  'inlineMode' => true,",
      "  // 'rpb-nolabel' => true, // hide label in backend",
      "  'settingsFile' => '/site/modules/RockMigrations/TinyMCE/simple.json',",
      "],"
    ],
    "description": "Add a TinyMCE field via RockMigrations"
  },
  "rmf-textarea-cke": {
    "prefix": "rmf-textarea-cke",
    "body": [
      "$1 => [",
      "  'type' => 'textarea',",
      "  'label' => '$3',",
      "  'inputfieldClass' => 'InputfieldCKEditor',",
      "  'contentType' => FieldtypeTextarea::contentTypeHTML,",
      "  'rows' => 5,",
      "  'formatTags' => 'p;h2;h3;h4;',",
      "  'contentsCss' => '/site/templates/bundle/main.css?m='.time(),",
      "  // this breaks CKE if file is not found!",
      "  // 'stylesSet' => 'customstyles:/site/templates/customstyles.js?m='.time(),",
      "  'toggles' => [",
      "    InputfieldCKEditor::toggleCleanNBSP,",
      "  ],",
      "  'toolbar' => 'Format, Styles,",
      "    Bold, Italic, Underline, RemoveFormat",
      "    JustifyLeft, JustifyCenter, JustifyRight, JustifyBlock",
      "    TransformTextToLowercase,TransformTextToUppercase,TransformTextCapitalize",
      "    TextColor,BGColor",
      "    NumberedList, BulletedList, Blockquote",
      "    PWLink, Unlink, Anchor",
      "    PWImage, Table, HorizontalRule, SpecialChar",
      "    PasteText, PasteFromWord",
      "    Scayt, -, Source",
      "    facebookvideo',",
      "  // 'customOptions' => json_encode([",
      "  //   'enterMode' => 1, // P",
      "  //   'enterMode' => 2, // BR",
      "  //   'enterMode' => 3, // DIV",
      "  //   'bodyClass' => 'p-4 prose max-w-full',",
      "  // ]),",
      "  'icon' => 'align-left',",
      "  'textformatters' => [],",
      "  'inlineMode' => true,",
      "  // RockPageBuilder no label shortcut",
      "  // 'rpb-nolabel' => true,",
      "],"
    ],
    "description": "Add a CKEditor field via RockMigrations"
  },
  "rmf-rockpagebuilder": {
    "prefix": "rmf-rockpagebuilder",
    "body": [
      "$1 => [",
      "  'type' => 'RockPageBuilder',",
      "  'label' => '$2',",
      "  'icon' => 'cubes',",
      "],"
    ],
    "description": "Add a RockPageBuilder field via RockMigrations"
  },
  "rmf-options": {
    "prefix": "rmf-options",
    "body": [
      "$1 => [",
      "  'type' => 'options',",
      "  'label' => '$2',",
      "  'icon' => 'cubes',",
      "  'options' => [",
      "    1 => 'ONE|This is option one',",
      "    2 => 'TWO',",
      "    3 => 'THREE',",
      "  ],",
      "],"
    ],
    "description": "Add a options field via RockMigrations"
  },
  "rmf-repeater": {
    "prefix": "rmf-repeater",
    "body": [
      "$1 => [",
      "  'label' => 'Repeater Label',",
      "  'type' => 'FieldtypeRepeater',",
      "  'fields' => [",
      "    'title',",
      "    'foo',",
      "    'bar',",
      "  ],",
      "  'repeaterTitle' => '#n: {title}',",
      "  'familyFriendly' => 1,",
      "  'repeaterDepth' => 0,",
      "  'tags' => '',",
      "  'repeaterAddLabel' => 'Add New Item',",
      "  'columnWidth' => 100,",
      "],"
    ],
    "description": "Add a repeater field via RockMigrations"
  },

  "rmf-fieldsetpage": {
    "prefix": "rmf-fieldsetpage",
    "body": [
      "$1 => [",
      "  'label' => 'FieldsetPage Label',",
      "  'type' => 'FieldtypeFieldsetPage',",
      "  'repeaterFields' => [",
      "    'title',",
      "    'foo',",
      "    'bar',",
      "  ],",
      "  'tags' => '',",
      "  'columnWidth' => 100,",
      "  'fieldContexts' => [",
      "    'title' => [",
      "      'label' => 'My Label',",
      "      'required' => 0,",
      "    ],",
      "  ],",
      "],"
    ],
    "description": "Add a fieldsetpage field via RockMigrations"
  },

  // Place your workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  //   "scope": "javascript,typescript",
  //   "prefix": "log",
  //   "body": [
  //     "console.log('$1');",
  //     "$2"
  //   ],
  //   "description": "Log output to console"
  // }
  "": { "body": "" }
}
